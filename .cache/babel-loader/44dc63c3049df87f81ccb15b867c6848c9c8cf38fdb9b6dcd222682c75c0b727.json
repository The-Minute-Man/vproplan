{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaaz\\\\OneDrive\\\\FPS\\\\futurite\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Planner() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [goal, setGoal] = useState('');\n  const [priority, setPriority] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [schedule, setSchedule] = useState({});\n  const [status, setStatus] = useState('Not Started');\n  const [goalsList, setGoalsList] = useState([]);\n  const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const togglePopup = () => setIsOpen(!isOpen);\n  const handleScheduleChange = (day, field, value) => {\n    setSchedule(prev => ({\n      ...prev,\n      [day]: {\n        ...prev[day],\n        [field]: value\n      }\n    }));\n  };\n  const addBreakTime = day => {\n    setSchedule(prev => {\n      var _prev$day;\n      const breaks = ((_prev$day = prev[day]) === null || _prev$day === void 0 ? void 0 : _prev$day.breaks) || [];\n      return {\n        ...prev,\n        [day]: {\n          ...prev[day],\n          breaks: [...breaks, {\n            start: '',\n            end: ''\n          }]\n        }\n      };\n    });\n  };\n  const updateBreakTime = (day, index, field, value) => {\n    setSchedule(prev => {\n      var _prev$day2;\n      const breaks = (_prev$day2 = prev[day]) === null || _prev$day2 === void 0 ? void 0 : _prev$day2.breaks.map((breakTime, i) => i === index ? {\n        ...breakTime,\n        [field]: value\n      } : breakTime);\n      return {\n        ...prev,\n        [day]: {\n          ...prev[day],\n          breaks\n        }\n      };\n    });\n  };\n  const removeBreakTime = (day, index) => {\n    setSchedule(prev => {\n      var _prev$day3;\n      const breaks = (_prev$day3 = prev[day]) === null || _prev$day3 === void 0 ? void 0 : _prev$day3.breaks.filter((_, i) => i !== index);\n      return {\n        ...prev,\n        [day]: {\n          ...prev[day],\n          breaks\n        }\n      };\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (goal && priority && startDate && endDate && status && Object.keys(schedule).length) {\n      const newGoal = {\n        goal,\n        priority: parseInt(priority, 10),\n        startDate,\n        endDate,\n        schedule,\n        status\n      };\n      setGoalsList([...goalsList, newGoal]);\n      setGoal('');\n      setPriority('');\n      setStartDate('');\n      setEndDate('');\n      setSchedule({});\n      setStatus('Not Started');\n      setIsOpen(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planner\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Where you can write your path down for Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Planner Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goalenterer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePopup,\n          children: \"Enter Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-content\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"myform\",\n              onSubmit: handleSubmit,\n              className: \"form-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"goal\",\n                  children: \"What is your goal?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"goal\",\n                  value: goal,\n                  onChange: e => setGoal(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"priority\",\n                  children: \"Priority (Number):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"priority\",\n                  value: priority,\n                  onChange: e => setPriority(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"start-date\",\n                  children: \"Start Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  id: \"start-date\",\n                  value: startDate,\n                  onChange: e => setStartDate(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"end-date\",\n                  children: \"End Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  id: \"end-date\",\n                  value: endDate,\n                  onChange: e => setEndDate(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"schedule-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Work Schedule:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 41\n                }, this), daysOfWeek.map(day => {\n                  var _schedule$day, _schedule$day2, _schedule$day3, _schedule$day4, _schedule$day5, _schedule$day5$breaks;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"day-schedule\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: !!((_schedule$day = schedule[day]) !== null && _schedule$day !== void 0 && _schedule$day.active),\n                        onChange: e => handleScheduleChange(day, 'active', e.target.checked)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 136,\n                        columnNumber: 53\n                      }, this), day]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 49\n                    }, this), ((_schedule$day2 = schedule[day]) === null || _schedule$day2 === void 0 ? void 0 : _schedule$day2.active) && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"time-inputs\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"time\",\n                        placeholder: \"Start Time\",\n                        value: ((_schedule$day3 = schedule[day]) === null || _schedule$day3 === void 0 ? void 0 : _schedule$day3.startTime) || '',\n                        onChange: e => handleScheduleChange(day, 'startTime', e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"time\",\n                        placeholder: \"End Time\",\n                        value: ((_schedule$day4 = schedule[day]) === null || _schedule$day4 === void 0 ? void 0 : _schedule$day4.endTime) || '',\n                        onChange: e => handleScheduleChange(day, 'endTime', e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"button\",\n                          onClick: () => addBreakTime(day),\n                          children: \"+ Add Break\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 158,\n                          columnNumber: 61\n                        }, this), (_schedule$day5 = schedule[day]) === null || _schedule$day5 === void 0 ? void 0 : (_schedule$day5$breaks = _schedule$day5.breaks) === null || _schedule$day5$breaks === void 0 ? void 0 : _schedule$day5$breaks.map((breakTime, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"break-time\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"time\",\n                            placeholder: \"Break Start\",\n                            value: breakTime.start,\n                            onChange: e => updateBreakTime(day, index, 'start', e.target.value)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 163,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"time\",\n                            placeholder: \"Break End\",\n                            value: breakTime.end,\n                            onChange: e => updateBreakTime(day, index, 'end', e.target.value)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 169,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            onClick: () => removeBreakTime(day, index),\n                            children: \"Remove\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 175,\n                            columnNumber: 69\n                          }, this)]\n                        }, index, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 162,\n                          columnNumber: 65\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 157,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 53\n                    }, this)]\n                  }, day, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 45\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"status\",\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"status\",\n                  value: status,\n                  onChange: e => setStatus(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Not Started\",\n                    children: \"Not Started\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"In Progress\",\n                    children: \"In Progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Completed\",\n                    children: \"Completed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Paused\",\n                    children: \"Paused\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  id: \"gsubmit\",\n                  value: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: togglePopup,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(Planner, \"jqUFD65h13gkn5GnqWxYE/u272M=\");\n_c = Planner;\nexport default Planner;\nvar _c;\n$RefreshReg$(_c, \"Planner\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Planner","_s","isOpen","setIsOpen","goal","setGoal","priority","setPriority","startDate","setStartDate","endDate","setEndDate","schedule","setSchedule","status","setStatus","goalsList","setGoalsList","daysOfWeek","togglePopup","handleScheduleChange","day","field","value","prev","addBreakTime","_prev$day","breaks","start","end","updateBreakTime","index","_prev$day2","map","breakTime","i","removeBreakTime","_prev$day3","filter","_","handleSubmit","event","preventDefault","Object","keys","length","newGoal","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","onSubmit","htmlFor","type","onChange","e","target","_schedule$day","_schedule$day2","_schedule$day3","_schedule$day4","_schedule$day5","_schedule$day5$breaks","checked","active","placeholder","startTime","endTime","_c","$RefreshReg$"],"sources":["C:/Users/shaaz/OneDrive/FPS/futurite/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Planner() {\n    const [isOpen, setIsOpen] = useState(false);\n    const [goal, setGoal] = useState('');\n    const [priority, setPriority] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [schedule, setSchedule] = useState({});\n    const [status, setStatus] = useState('Not Started');\n    const [goalsList, setGoalsList] = useState([]);\n\n    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n    const togglePopup = () => setIsOpen(!isOpen);\n\n    const handleScheduleChange = (day, field, value) => {\n        setSchedule((prev) => ({\n            ...prev,\n            [day]: { ...prev[day], [field]: value },\n        }));\n    };\n\n    const addBreakTime = (day) => {\n        setSchedule((prev) => {\n            const breaks = prev[day]?.breaks || [];\n            return {\n                ...prev,\n                [day]: { \n                    ...prev[day],\n                    breaks: [...breaks, { start: '', end: '' }],\n                },\n            };\n        });\n    };\n\n    const updateBreakTime = (day, index, field, value) => {\n        setSchedule((prev) => {\n            const breaks = prev[day]?.breaks.map((breakTime, i) => (\n                i === index ? { ...breakTime, [field]: value } : breakTime\n            ));\n            return {\n                ...prev,\n                [day]: { ...prev[day], breaks },\n            };\n        });\n    };\n\n    const removeBreakTime = (day, index) => {\n        setSchedule((prev) => {\n            const breaks = prev[day]?.breaks.filter((_, i) => i !== index);\n            return {\n                ...prev,\n                [day]: { ...prev[day], breaks },\n            };\n        });\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (goal && priority && startDate && endDate && status && Object.keys(schedule).length) {\n            const newGoal = {\n                goal,\n                priority: parseInt(priority, 10),\n                startDate,\n                endDate,\n                schedule,\n                status,\n            };\n            setGoalsList([...goalsList, newGoal]);\n            setGoal('');\n            setPriority('');\n            setStartDate('');\n            setEndDate('');\n            setSchedule({});\n            setStatus('Not Started');\n            setIsOpen(false);\n        }\n    };\n\n    return (\n        <div className=\"planner\">\n            <section>\n                <h2>Welcome to Planner</h2>\n                <h3>Where you can write your path down for Success</h3>\n            </section>\n            <section>\n                <h2>Planner Table</h2>\n                <div className=\"goalenterer\">\n                    <button onClick={togglePopup}>Enter Goal</button>\n                    {isOpen && (\n                        <div className=\"popup-overlay\">\n                            <div className=\"popup-content\">\n                                <form id=\"myform\" onSubmit={handleSubmit} className=\"form-grid\">\n                                    <div>\n                                        <label htmlFor=\"goal\">What is your goal?</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"goal\"\n                                            value={goal}\n                                            onChange={(e) => setGoal(e.target.value)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <label htmlFor=\"priority\">Priority (Number):</label>\n                                        <input\n                                            type=\"number\"\n                                            id=\"priority\"\n                                            value={priority}\n                                            onChange={(e) => setPriority(e.target.value)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <label htmlFor=\"start-date\">Start Date:</label>\n                                        <input\n                                            type=\"date\"\n                                            id=\"start-date\"\n                                            value={startDate}\n                                            onChange={(e) => setStartDate(e.target.value)}\n                                        />\n                                    </div>\n                                    <div>\n                                        <label htmlFor=\"end-date\">End Date:</label>\n                                        <input\n                                            type=\"date\"\n                                            id=\"end-date\"\n                                            value={endDate}\n                                            onChange={(e) => setEndDate(e.target.value)}\n                                        />\n                                    </div>\n                                    <div className=\"schedule-section\">\n                                        <h3>Work Schedule:</h3>\n                                        {daysOfWeek.map((day) => (\n                                            <div key={day} className=\"day-schedule\">\n                                                <label>\n                                                    <input\n                                                        type=\"checkbox\"\n                                                        checked={!!schedule[day]?.active}\n                                                        onChange={(e) => handleScheduleChange(day, 'active', e.target.checked)}\n                                                    />\n                                                    {day}\n                                                </label>\n                                                {schedule[day]?.active && (\n                                                    <div className=\"time-inputs\">\n                                                        <input\n                                                            type=\"time\"\n                                                            placeholder=\"Start Time\"\n                                                            value={schedule[day]?.startTime || ''}\n                                                            onChange={(e) => handleScheduleChange(day, 'startTime', e.target.value)}\n                                                        />\n                                                        <input\n                                                            type=\"time\"\n                                                            placeholder=\"End Time\"\n                                                            value={schedule[day]?.endTime || ''}\n                                                            onChange={(e) => handleScheduleChange(day, 'endTime', e.target.value)}\n                                                        />\n                                                        <div>\n                                                            <button type=\"button\" onClick={() => addBreakTime(day)}>\n                                                                + Add Break\n                                                            </button>\n                                                            {schedule[day]?.breaks?.map((breakTime, index) => (\n                                                                <div key={index} className=\"break-time\">\n                                                                    <input\n                                                                        type=\"time\"\n                                                                        placeholder=\"Break Start\"\n                                                                        value={breakTime.start}\n                                                                        onChange={(e) => updateBreakTime(day, index, 'start', e.target.value)}\n                                                                    />\n                                                                    <input\n                                                                        type=\"time\"\n                                                                        placeholder=\"Break End\"\n                                                                        value={breakTime.end}\n                                                                        onChange={(e) => updateBreakTime(day, index, 'end', e.target.value)}\n                                                                    />\n                                                                    <button type=\"button\" onClick={() => removeBreakTime(day, index)}>\n                                                                        Remove\n                                                                    </button>\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                )}\n                                            </div>\n                                        ))}\n                                    </div>\n                                    <div>\n                                        <label htmlFor=\"status\">Status:</label>\n                                        <select\n                                            id=\"status\"\n                                            value={status}\n                                            onChange={(e) => setStatus(e.target.value)}\n                                        >\n                                            <option value=\"Not Started\">Not Started</option>\n                                            <option value=\"In Progress\">In Progress</option>\n                                            <option value=\"Completed\">Completed</option>\n                                            <option value=\"Paused\">Paused</option>\n                                        </select>\n                                    </div>\n                                    <div className=\"form-actions\">\n                                        <input type=\"submit\" id=\"gsubmit\" value=\"Submit\" />\n                                        <button onClick={togglePopup}>Close</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </section>\n        </div>\n    );\n}\n\nexport default Planner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}